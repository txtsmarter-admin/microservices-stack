{
  "name": "@my-app/{{serviceName}}",
  "version": "1.0.0",
  "description": "{{serviceName}} microservice",
  "main": "dist",
  "scripts": {
    "build": "npm run clean  &&  tsc -p src/tsconfig.json",
    "clean": "rimraf dist/",
    "check": "npm run format && npm run lint && npm run build && npm run test && npm run cli-test",
    "dev": "cross-env ENV_FILE=envs/local.dev.env BLUEBIRD_W_FORGOTTEN_RETURN=0 ts-node --files src/main.ts",
    "debug": "cross-env ENV_FILE=envs/local.dev.env TS_NODE_FILES=true node --inspect-brk -r ts-node/register src/main.ts",
    "format": "prettier --write \"{src,{tests,mocks}}/**/*.{js,ts}\"",
    "lint": "eslint \"{src,{tests,mocks}}/**/*.{js,ts}\"",
    "start": "NODE_ENV=${NODE_ENV:-production} node dist/main.js",
    "test:ci": "cross-env ENV_FILE=envs/circleci.test.env jest --coverage --runInBand",
{{#if externalSqlDb}}
    "cli-test": "cross-env ENV_FILE=envs/local.test.env npm run db:test:start && npm run cli-test:start && cross-env ENV_FILE=envs/local.test.env npm run db:test:stop",
    "cli-test:start": "cross-env ENV_FILE=envs/local.test.env BLUEBIRD_W_FORGOTTEN_RETURN=0  ts-node --files src/main.ts",
    "test": "cross-env ENV_FILE=envs/local.test.env npm run db:test:start && npm run test:start && cross-env ENV_FILE=envs/local.test.env npm run db:test:stop",
    "test:start": "cross-env ENV_FILE=envs/local.test.env jest --coverage --runInBand --no-cache",
    "db:dev:start": "cross-env  ENV_FILE=envs/local.dev.env   npm run db:start",
    "db:dev:stop": "cross-env   ENV_FILE=envs/local.dev.env   npm run db:stop",
    "db:test:start": "cross-env-shell ENV_FILE=envs/local.test.env  ./tests/db/start.sh 2>&1",
    "db:test:stop": "cross-env-shell  ENV_FILE=envs/local.test.env  ./tests/db/stop.sh 2>&1",
{{/if}}
{{#if sql}}
    "db:start": "cross-env-shell ENV_FILE=envs/local.dev.env ./tests/db/start.sh 2>&1",
    "db:stop": "cross-env-shell ENV_FILE=envs/local.dev.env ./tests/db/stop.sh 2>&1",
{{/if}}
{{#unless externalSqlDb}}
    "test": "cross-env ENV_FILE=envs/local.test.env jest --coverage --runInBand --no-cache",
    "cli-test": "cross-env ENV_FILE=envs/local.test.env BLUEBIRD_W_FORGOTTEN_RETURN=0 ts-node --files src/main.ts",
{{/unless}}
    "setup:local": "ts-node dev/setup.local.ts",
    "setup:local:force": "npm run setup:local -- --force"
  },
  "keywords": [
    "microservices",
    "moleculer"
  ],
  "author": "MyApp",
  "devDependencies": {
{{#if mongo}}
    "@types/bson": "4.2.0",
{{/if}}
    "@types/jest": "28.1.6",
    "@types/jsonwebtoken": "8.5.8",
    "@types/lodash": "4.14.182",
    "@types/node": "18.6.1",
    "@types/object-hash": "2.2.1",
{{#if sql}}
    "@types/uuid": "8.3.4",
{{/if}}
    "@typescript-eslint/eslint-plugin": "5.31.0",
    "@typescript-eslint/parser": "5.31.0",
    "cross-env": "7.0.3",
    "eslint": "8.20.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-prettier": "4.2.1",
    "fast-glob": "3.2.11",
    "jest": "28.1.3",
    "jest-extended": "3.0.1",
    "jest-standard-reporter": "2.0.0",
    "moleculer-repl": "0.7.1",
{{#if mongo}}
    "mongodb-memory-server": "8.8.0",
{{/if}}
    "prettier": "2.7.1",
    "rimraf": "3.0.2",
    "ts-jest": "28.0.7",
    "ts-node": "10.9.1",
    "type-fest": "2.17.0",
    "typescript": "4.7.4",
    "utility-types": "3.10.0"
  },
  "dependencies": {
    "@my-app/authz-api": "workspace:*",
    "@my-app/{{serviceName}}-api": "workspace:*",
    "@casl/ability": "6.0.0",
{{#if needDb}} 
    "@mikro-orm/cli": "5.2.4",
    "@mikro-orm/core": "5.2.4",
  {{#if mongo}}
    "@mikro-orm/mongodb": "5.2.4",
  {{/if}}
  {{#if sql}}
    "@mikro-orm/postgresql": "5.2.4",
    "@mikro-orm/sqlite": "5.2.4",
  {{/if}}
{{/if}}
    "amqplib": "0.10.0",
    "dotenv": "16.0.1",
    "ioredis": "5.2.2",
    "joiful": "3.0.2",
    "jsonwebtoken": "8.5.1",
    "lodash": "4.17.21",
    "moleculer": "0.14.21",
    "moleculer-context-db": "1.4.0",
    "moment": "2.29.4",    
    "notepack.io": "3.0.1",
    "object-hash": "3.0.0",
    "pkg-dir": "5.0.0",
    "redlock": "4.2.0",
    "reflect-metadata": "0.1.13",
    "thunky": "1.1.0",
    "typed-moleculer": "1.0.5",
{{#if sql}}
    "uuid": "8.3.2",
{{/if}}
    "winston": "3.8.1",
    "winston-gelf-transporter": "1.0.2"
  },
  "engines": {
    "node": ">= 12.x.x"
  },
{{#if mongo}}
  "config": {
    "mongodbMemoryServer": {
      "version": "4.4.1"
    }
  },
{{/if}}
  "jest": {
    "testEnvironment": "node",
    "rootDir": ".",
    "coverageDirectory": "tests/coverage",
    "reporters": [
      "jest-standard-reporter"
    ],
    "collectCoverageFrom": [
      "src/**/*"
    ],
    "roots": [
      "./tests"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": ".*\\.(test|spec).(ts|js)$",
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.json"
      }
    },
    "testTimeout": 60000,
    "setupFilesAfterEnv": [
      "jest-extended",
      "./tests/setup.ts"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "restoreMocks": true,
    "clearMocks": true,
    "resetMocks": true
  }
}
